Preconditions Sphinx:
	Kafka
		- depends on: zookeeper
		- optional: kafdrop

Common preconditions for DTM/AD/ID/ID-UI:
	PostgreSQL (version: 13.2)
	Java JDK (version: 1.8)
	Nginx (version 1.20.0) (for ID-UI)
	ID-UI
	
Preconditions for AD:
	Linux / Windows
	HBase (version: 2.1.3)	
------------------------------------

Minimum Requirements
o	CPU: CPU like Intel I7
o	RAM: 32GB (of RAM allocated to the Java heap)
o	GPU: Not needed
o	SPACE: 3TB (of raw disk capacity per RegionServer (HBase))

------------------------------------

Install AD without Docker:

I. Install and start Hbase in Standalone Mode (without Haddop and Zookeeper):

	1. Download HBase 2.1.3:
		http://archive.apache.org/dist/hbase/2.3.1/hbase-2.3.1-bin.tar.gz  
		
	2. Unzip the downloaded Hbase and place it in some common path, say
		C:\tools\hbase-2.1.3
	
	3. Create a folders as shown below inside root folder for HBase data and zookeeper 
		zookeeper (e.g: C:\tools\hbase-2.1.3\zookeeper)
		hbase (e.g: C:\tools\hbase-2.1.3\hbase)
	
	4. Edit bin\hbase-config.cmd file (if you are using a different Java version than the one set in %JAVA_HOME%):
         set JAVA_HOME=C:\Progra~1\Java\jdk1.8.0_171
	
	5. Edit conf\hbase-env.cmd (windows) / conf\hbase-env.sh (unix): 	
	
		rem if you are using a different Java version than the one set in %JAVA_HOME%, uncomment the next line:
		rem set JAVA_HOME=C:\Progra~1\Java\jdk1.8.0_171
		set JAVA_HOME=%JAVA_HOME%			
		set HBASE_CLASSPATH=%HBASE_HOME%\lib\client-facing-thirdparty\*
		set HBASE_HEAPSIZE=8000
		set HBASE_OPTS="-XX:+UseConcMarkSweepGC" "-Djava.net.preferIPv4Stack=true"
		set SERVER_GC_OPTS="-verbose:gc" "-XX:+PrintGCDetails" "-XX:+PrintGCDateStamps" %HBASE_GC_OPTS%
		set HBASE_USE_GC_LOGFILE=true

		set HBASE_JMX_BASE="-Dcom.sun.management.jmxremote.ssl=false" "-Dcom.sun.management.jmxremote.authenticate=false"

		set HBASE_MASTER_OPTS=%HBASE_JMX_BASE% "-Dcom.sun.management.jmxremote.port=10101"
		set HBASE_REGIONSERVER_OPTS=%HBASE_JMX_BASE% "-Dcom.sun.management.jmxremote.port=10102"
		set HBASE_THRIFT_OPTS=%HBASE_JMX_BASE% "-Dcom.sun.management.jmxremote.port=10103"
		set HBASE_ZOOKEEPER_OPTS=%HBASE_JMX_BASE% -Dcom.sun.management.jmxremote.port=10104"
		set HBASE_REGIONSERVERS=%HBASE_HOME%\conf\regionservers
		set HBASE_LOG_DIR=%HBASE_HOME%\logs
		set HBASE_IDENT_STRING=%USERNAME%
		set HBASE_MANAGES_ZK=true
	
	6. Edit conf\hbase-site.xml:
	
		<property>
			<name>hbase.cluster.distributed</name>
			<value>false</value>
		</property>

		<property>
			<name>hbase.tmp.dir</name>
			<value>./tmp</value>
		</property>

		<property>
			<name>hbase.unsafe.stream.capability.enforce</name>
			<value>false</value>
		</property>
		  
		<property>
			<name>hbase.rootdir</name>
			<value>file:///C:/tools/hbase-2.1.3/hbase</value>
		</property>

		<property>
			<name>hbase.zookeeper.property.dataDir</name>
			<value>/C:/tools/hbase-2.1.3/zookeeper</value>
		</property>

		<property>
			<name>hbase.zookeeper.quorum</name>
			<value>hbaseserver</value>	
		</property>

		<property>
			<name>hbase.zookeeper.property.clientPort</name>
			<value>2181</value>
		</property>
	  
		<property>
			<name>hbase.master.port</name>
			<value>16000</value>
		</property>

		<property>
			<name>hbase.master.info.port</name>
			<value>16010</value>
		</property>

		<property>
			<name>hbase.regionserver.port</name>
			<value>16020</value>
		</property>

		<property>
			<name>hbase.regionserver.info.port</name>
			<value>16030</value>
		</property>
	
	7. Start HBase:
	
		cd c:\tools\hbase-2.1.3\bin
		start-hbase.cmd / start-hbase.sh
		
	8. Verify:

		http://localhost:16010/
		
		or
		
		cd c:\tools\hbase-2.1.3\bin
		hbase shell
		
II. Install and start AD application:
	
	1. Download Jar:
		[link to jar]
		
	2. Start AD application:
		java -jar anomaly-detection-0.0.1-SNAPSHOT.jar
--------------------------------------------------

Install ID-UI without Docker:

Install Nginx on Windows:
	1. Download nginx (version: 1.20.0): 
		http://nginx.org/en/download.html
		
	2. Unzip the downloaded nginx and place it in some common path, say
	    C:\tools\nginx-1.20.0	

Install Nginx on Linux:

	1. Install nginx:
		sudo apt-get install nginx  
		
	2. Allow rights:	
		sudo ufw allow 'Nginx Full'  

Configure Nginx:

	1. Edit \conf\nginx.conf; add line:
	
		try_files $uri /id-ui/index.html; 
	
		as in the example below:
		
		server {
			listen       80;
			server_name  localhost;
			location / {
				root   html;
				index  index.html index.htm;
				try_files $uri /id-ui/index.html; 
			}
			...
		}
			
	2. Create a new folder "id-ui" in "C:\tools\nginx-1.20.0\html\"	

Install ID-UI application	
	1. Download ID-UI (react application)
		[link]
		
	2. Copy content of downloaded ID-UI application to 'id-ui' folder from nginx server
	
	3. Start nginx:
		windows:		
			cd C:\tools\nginx-1.20.0	
			nginx.exe
		linux:
			sudo systemctl start nginx  
	
	4. Verify:
		http://localhost/id-ui/

    5. Stop nginx:
        windows:
            cd C:\tools\nginx-1.20.0
            nginx.exe -s stop

            or

            taskkill /f /IM nginx.exe

            or

            netstat -ano | findstr 80
            taskkill /pid 20580 /f

            verify:
            tasklist /fi "imagename eq nginx.exe"
        linux:
			sudo systemctl stop nginx
------------------------------------

	
			