# for sphinx local with database in container
#spring.datasource.url=jdbc:postgresql://localhost:8432/sphinx
# for sphinx and database in container
#spring.datasource.url=jdbc:postgresql://sphinx-postgres:5432/sphinx
#volos
spring.datasource.url=jdbc:postgresql://146.124.106.170:30005/sphinx

ad.adml.simulation.path = /sphinx/ad/simulation/sflow

# kafka
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_ADDRESS:10.233.100.183:9092}

spring.kafka.properties.security.protocol=${KAFKA_PROPERTIES_SECURITY_PROTOCOL:SASL_SSL}
spring.kafka.properties.sasl.mechanism=${KAFKA_PROPERTIES_SASL_MECHANISM:OAUTHBEARER}
spring.kafka.properties.sasl.jaas.config=${KAFKA_PROPERTIES_SASL_JAAS_CONFIG:org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required username="kafkauser" password="kafkauser123";}
#spring.kafka.properties.sasl.jaas.config=${KAFKA_PROPERTIES_SASL_JAAS_CONFIG:org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;"}
spring.kafka.properties.sasl.login.callback.handler.class=${KAFKA_PROPERTIES_SASL_LOGIN_CALLBACK_HANDLER_CLASS:io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler}
spring.kafka.jks = ${KAFKA_JKS:sphinx.jks}

spring.kafka.ssl.trust-store-location=${SSL_TRUSTSTORE_PATH:/home/appuser/sphinx.jks}
spring.kafka.ssl.trust-store-password=${SSL_TRUSTSTORE_PASSWORD:test@123}

hbase.zookeeper.quorum = ${HBASE_ZOOKEEPER: sphinx-hbase:2181}

# logging
# logging.file.path & logging.file.name:you should only set one
logging.file.name=/var/log/ad.log
logging.pattern.rolling-file-name=/var/log/ad-%d{yyyy-MM-dd}.%i.log

#spark.master = ${SPARK_URL:spark://172.18.252.148:7077}

#for test
app.scheduling.enable=true
