app.name = Anomaly Detection (AD)
app.description=${app.name} is a Spring Boot application

# ad
ad.name = Anomaly Detection (AD)

server.servlet.context-path=/sphinx/ad
server.port = 8088

# [modul][componenta][categorie][algoritm][proprietate]=[valoare]
# [modul][componenta][categorie][proprietate]=[valoare]
# [modul][componenta][categorie][list][listType~]=[valoare]
# [modul][componenta][categorie][general][proprietate]=[valoare]

ad.adml.simulation.path = C:\\work\\SPHINX\\anomaly-detection\\src\\test\\resources\\sflow
ad.adml.simulation.tool.logstash.enabled = false
ad.adml.simulation.tool.logstash.path = C:\\tools\\logstash
ad.adml.simulation.tool.logstash.exe = logstash.bat

ad.adml.kmeans.disabled=false
ad.adml.kmeans.dns.disabled=false
ad.adml.kmeans.http.disabled=true

ad.adml.sflow.disabled=false

ad.adml.sflow.general.excludeIPs=[]
ad.adml.sflow.alert.maxFlowList=1000
ad.adml.sflow.bigProviders.minBytes=1073741824L
ad.adml.sflow.mynets.net=10.#Intranet 1,100.100.

ad.adml.sflow.BigProvider.whitelist=
ad.adml.sflow.ProxyServer.whitelist=
ad.adml.sflow.MX.whitelist=10.1.1.1#SMTP Server
ad.adml.sflow.TTalker.whitelist=10.1.1.1#Big Talker 1,10.1.111.#DMZ

ad.adml.sflow.OSRepo.windows = windowsupdate.microsoft.com,update.microsoft.com,windowsupdate.com,download.windowsupdate.com,download.microsoft.com,download.windowsupdate.com,ntservicepack.microsoft.com,time.windows.com,javadl-esd.sun.com,fpdownload.adobe.com,cache.pack.google.com,aus2.mozilla.org,aus3.mozilla.org,aus4.mozilla.org,avast.com,files.avast.com
ad.adml.sflow.OSRepo.linux= security.ubuntu.com,security.debian.org,mirrorlist.centos.org,0.rhel.pool.ntp.org,1.rhel.pool.ntp.org,2.rhel.pool.ntp.org,ntp.ubuntu.com,linux.dropbox.com
ad.adml.sflow.OSRepo.android =play.google.com,android.clients.google.com
ad.adml.sflow.OSRepo.apple = phobos.apple.com,deimos3.apple.com,albert.apple.com,gs.apple.com,itunes.apple.com,ax.itunes.apple.com
ad.adml.sflow.OSRepo.freebsd = ftp.freebsd.org

# 1. Top talker identified (disabled)
ad.adml.sflow.topTalkers.disabled=false
ad.adml.sflow.topTalkers.threshold=21474836480L
ad.adml.sflow.topTalkers.excludeIPs=[]

# 2. SMTP Talkers
ad.adml.sflow.SMTPTalkers.disabled=false
ad.adml.sflow.SMTPTalkers.minBytes=20971520L
ad.adml.sflow.SMTPTalkers.excludeIPs=[]

# FTP, etc.. Talkers

# 8. P2P Communication
# P2P Communication - 2nd method
ad.adml.sflow.p2p.disabled = false
ad.adml.sflow.p2p.minBytes2nd = 10000000L
ad.adml.sflow.p2p.minPairs2nd = 10
ad.adml.sflow.p2p.minPairs = 5
ad.adml.sflow.p2p.minPorts2nd = 10
ad.adml.sflow.p2p.minPorts = 4
ad.adml.sflow.p2p.excludeIPs = []

# 11. Media streaming clients
ad.adml.sflow.mediaStreaming.disabled = false
ad.adml.sflow.mediaStreaming.maxDuration = 7200
ad.adml.sflow.mediaStreaming.maxUploadBytes = 10000000L
ad.adml.sflow.mediaStreaming.minDownloadBytes = 1000000L
ad.adml.sflow.mediaStreaming.minDuration = 300
ad.adml.sflow.mediaStreaming.excludePorts = [1194]
ad.adml.sflow.mediaStreaming.excludeIPs = []

# 3. Atypical TCP port used
ad.adml.sflow.atypicalPorts.disabled = false
ad.adml.sflow.atypicalPorts.excludePorts = [80,443,587,465,993,995]
ad.adml.sflow.atypicalPorts.minPacketsPerFlow = 2
ad.adml.sflow.atypicalPorts.excludeIPs=[]

# 4. Port Histogram - Atypical alien TCP port used
ad.adml.sflow.atypicalAlienPorts.disabled=false
ad.adml.sflow.atypicalAlienPorts.minPacketsPerFlow = 2
ad.adml.sflow.atypicalAlienPorts.excludeIPs=[]

# 5. Atypical number of pairs in the period
ad.adml.sflow.atypicalPairs.disabled=false
ad.adml.sflow.atypicalPairs.minPairs=300
ad.adml.sflow.atypicalPairs.excludeIPs=[]

# 6. Atypical amount of data transfered
ad.adml.sflow.atypicalData.disabled=false
ad.adml.sflow.atypicalData.minBytes=5737418240L
ad.adml.sflow.atypicalData.excludeIPs=[]

# Port Histogram - Atypical TCP port used
## Atypical TCP port used by Alien Network

# 7. Alien accessing too much hosts
ad.adml.sflow.alien.disabled=false
ad.adml.sflow.alien.minPairs=20
ad.adml.sflow.alien.excludeIPs=[]

# 9. UDP amplifier (DDoS)
ad.adml.sflow.UDPAmplifier.disabled = false
ad.adml.sflow.UDPAmplifier.excludeIPs = []

# 10. Abused SMTP Server
ad.adml.sflow.abusedSMTP.disabled = false
ad.adml.sflow.abusedSMTP.minBytes = 50000000L
ad.adml.sflow.abusedSMTP.excludeIPs = []

# 12. DNS tunnels
ad.adml.sflow.dnsTunnel.disabled=false
ad.adml.sflow.dnsTunnel.minBytes=50000000L
ad.adml.sflow.dnsTunnel.excludeIPs=[]

# 13. ICMP tunnels
ad.adml.sflow.ICMPTunnel.disabled=false
ad.adml.sflow.ICMPTunnel.minBytes=100000000L
ad.adml.sflow.ICMPTunnel.minPacket=200
ad.adml.sflow.ICMPTunnel.excludeIPs=[]

# 14. Horizontal PortScans
ad.adml.sflow.hPortScan.disabled=false
ad.adml.sflow.hPortScan.excludeAlienPorts = [80,443,587,465,993,995]
ad.adml.sflow.hPortScan.excludeMyPorts = [123]
ad.adml.sflow.hPortScan.minFlows = 100
ad.adml.sflow.hPortScan.excludeIPs = []

# 15. Vertical PortScans
ad.adml.sflow.vPortScan.disabled=false
#ad.adml.sflow.vPortScan.vPortScanMinPortsThreshold = 3
ad.adml.sflow.vPortScan.maxPortNumber = 1024
ad.adml.sflow.vPortScan.minPorts = 3
ad.adml.sflow.vPortScan.excludeIPs = []

# 16. Server under DDoS attack
ad.adml.sflow.DDoS.disabled=false
ad.adml.sflow.DDoS.minFlows=50
ad.adml.sflow.DDoS.minPairs=20
ad.adml.sflow.DDoS.excludeIPs=[]

# 17. C&C BotNets
ad.adml.sflow.BotNet.disabled=false
ad.adml.sflow.BotNet.minPktsPerFlow=20
ad.adml.sflow.BotNet.excludeIPs=[]
ad.adml.sflow.BotNet.url = https://rules.emergingthreats.net/blockrules/emerging-botcc.rules

app.scheduling.enable=true

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.show-sql=true

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:8432/sphinx
#spring.datasource.url=jdbc:postgresql://10.233.100.183:5432/sphinx
spring.datasource.username=sphinx
spring.datasource.password=sphinx
spring.liquibase.change-log=classpath:/sphinx/update.xml
logging.level.liquibase = INFO

# logging

# logging.file.path & logging.file.name:you should only set one
#logging.file.path=c:\\logs
logging.file.name=c:\\logs\\ad.log
logging.pattern.rolling-file-name=c:\\logs\\ad-%d{yyyy-MM-dd}.%i.log
# log file size
logging.file.max-size=20MB
# the total size of all log files under a specified number
logging.file.total-size-cap=600MB
# maximum number of days that the archive log files are kept
logging.file.max-history=30
logging.file.clean-history-on-start=true

management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoint.info.enabled=true
management.endpoints.web.exposure.include=info,health,metrics
#management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=
management.endpoints.jmx.exposure.include=*
management.endpoints.jmx.exposure.exclude=

#spring.rabbitmq.host=localhost
# spring.rabbitmq.host=0.0.0.0
# spring.rabbitmq.port=5672
# spring.rabbitmq.username=guest
# spring.rabbitmq.password=guest

#dtm.queue.name =  dtm-package
dtm.exchange.name = tshark-sphinx-Exchange
dtm.routing.key.name = tshark-sphinx-RoutingKey

ad.alert.queue.name = AnomalyDetectionAlert-Queue
ad.alert.exchange.name = AnomalyDetectionAlert-Exchange
ad.alert.routing.key.name = AnomalyDetectionAlert-RoutingKey

kafka.bootstrapAddress=10.233.100.183:9092
#kafka.topic.name= dtm-package
kafka.group.id=anomaly-detection

topic.package=dtm-package
topic.event = dtm-event
topic.nfstream = ad-nfstream
topic.hogzilla = ad-hogzilla
topic.ad.alert = ad-alert

spring.h2.console.enabled=true
spring.servlet.multipart.max-file-size=2000MB
spring.servlet.multipart.max-request-size=10000MB

spring.resources.add-mappings=true

hbase.zookeeper.quorum = localhost:2181
hbase.zookeeper.property.clientPort=2181

spark.app.name = AD-ML
spark.master = $spark://172.18.252.171:7077
#spark.master = spark://172.18.252.148:7077

# sm
# SM_IP
sphinx.sm.ip=${SM_IP: http://sphinx-kubernetes.intracom-telecom.com/SMPlatform/manager/rst}
sphinx.sm.kafkaAuthentication=/KafkaAuthentication
sphinx.sm.username=kafkauser
sphinx.sm.password=kafkauser123

# OSS: trebuie neapartat SIEM
oauth.client.id=SIEM
oauth.token.endpoint.uri=${OAUTH_TOKEN_ENDPOINT_URI: http://sphinx-kubernetes.intracom-telecom.com/SMPlatform/manager/rst/getKafkaToken}